# 특정 값이 있는지 확인하기
# in
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
30 in a
100 in a
# not in
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
30 not in a
100 not in a

43 in (38, 76, 43, 62, 19)
1 in range(10)
'P' in 'Hello, Python'

# 시퀀스 객체 연결하기
a = [0, 10, 20, 30]
b = [9, 8, 7, 6]
a + b
b + a

range(0, 10) + range(10, 20)
list(range(0, 10)) + list(range(10, 20))
tuple(range(0, 10)) + tuple(range(10, 20))

'Hello, ' + 'world!'

'Hello, ' + 10
'Hello, ' + str(10)
'Hello, ' + str(1.5)

# 시퀀스 객체 반복하기
[0, 10, 20, 30] * 3

a = [0, 10, 20, 30]
a * 3
a * 0
a * -3
a * 1.2

range(0, 5, 2) * 3
list(range(0, 5, 2)) * 3
tuple(range(0, 5, 2)) * 3

'Hello, ' * 3

# 시퀀스 객체의 요소 개수 구하기
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
len(a)

b = (38, 76, 43, 62, 19)
len(b)

len(range(0, 10, 2))

hello1 = 'Hello, world!'
len(hello1)
len(hello1.encode('utf-8'))

hello2 = '안녕하세요'
len(hello2)
len(hello2.encode('utf-8'))

# 인덱스 사용하기
a = [38, 21, 53, 62, 19]
a[0]
a[2]
a[4]
a[0], a[2], a[4]    # 튜플 형태로 출력
a[0] + a[2] + a[4]

b = (38, 21, 53, 62, 19)
b[0]


r = range(0, 10, 2)
r[2]

hello = 'Hello, world!'
hello[7]

a = [38, 21, 53, 62, 19]
a[1]
a.__getitem__(1)

# 음수 인덱스 지정하기
a = [38, 21, 53, 62, 19]
a[-1]
a[-5]

b = (38, 21, 53, 62, 19)
b[-1]

r = range(0, 10, 2)
r[-3]

hello = 'Hello, world!'
hello[-4]


a = [38, 21, 53, 62, 19]
a[5]


# 마지막 요소에 접근하기
a = [38, 21, 53, 62, 19]
a[-1]
len(a)
a[len(a)]
a[len(a)-1]


# 요소에 값 할당하기
a = [0, 0, 0, 0, 0]
a[0] = 38
a[1] = 21
a[2] = 53
a[3] = 62
a[4] = 19
a
a[0]
a[4]


b = (0, 0, 0, 0, 0)
b[0] = 38

r = range(0, 10, 2)
r[0] = 3

hello = 'Hello, world!'
hello[0] = 'A'


# del로 요소 삭제하기
a = [38, 21, 53, 62, 19]
del a[2]
a

b = (38, 21, 53, 62, 19)
del b[2]

r = range(0, 10, 2)
del r[2]

hello = 'Hello, world!'
del hello[2]


# 슬라이스 사용하기
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[0:4]
a[0:10]

a[1:1]
a[1:2]


# 리스트의 중간부분 가져오기
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[4:7]
a[4:-1]

# 인덱스 증가폭 사용하기
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[2:8:3]
a[2:9:3]


# 인덱스 생략하기
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[:7]   # 처음부터 a[6]까지
a[7:]
a[:]    # 처음부터 끝까지
a[:len(a)]


# 인덱스를 생략하면서 증가폭 사용하기
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[:7:2]
a[7::2]
a[::2]
a[::]

a[-5:-9:-1]
a[-5:-9]    # 빈 리스트 나옴 why? 시작 인덱스가 더 커서

# 처음부터 끝까지, 단계 len(1) => 10
a[::len(a)]
a[::10]

# 처음부터 끝까지, 단계 len(a)-1 => 9
a[::len(a) - 1]
a[::9]

# len 응용하기
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[0:len(a)]
a[:len(a)]


# 튜플, range, 문자열에 슬라이스 사용하기
b = (0, 10, 20, 30, 40, 50, 60, 70, 80, 90)
b[4:7]
b[4:]
b[:7:2]

r = range(10)
r
r[4:7]
r[4:]
r[:7:2]
list(r[:7:2])

hello = 'Hello, world!'
hello[2:9]
hello[2:]
hello[:9:2]

# 슬라이스에 요소 할당하기
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[2:5] = ['a', 'b', 'c']
a


a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[2:5] = ['a']
a

a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[2:5] = ['a', 'b', 'c', 'd', 'e']
a

a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[2:8:2] = ['a', 'b', 'c']
a

a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
a[2:8:2] = ['a', 'b']
a


b = (0, 10, 20, 30, 40, 50, 60, 70, 80, 90)
b[2:5] = ('a', 'b', 'c')


r = range(10)
r[2:5] = range(0, 3)

hello = 'Hello, world!'
hello[7:13] = 'Python'


# del로 슬라이스 삭제하기
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
del a[2:5]
a

a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
del a[2:8:2]
a


b = (0, 10, 20, 30, 40, 50, 60, 70, 80, 90)
del b[2:5]


r = range(10)
del r[2:5]

hello = 'Hello, world!'
del hello[2:9]



























